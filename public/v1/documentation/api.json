{
  "swagger": "2.0",
  "info": {
    "description": "This is documentatin for the Node API. For every request you must include in the header: \n Content-Type: application/json \n\n For protected routes by authorization we use JWT. Each of these have a lock by them. Must include a Bearer Token in the header \n Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ...",
    "version": "1.0.0",
    "title": "Yt-Server",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "brian@orangetech.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "api.your-url.com",
  "basePath": "/v1",
  "tags": [
    {
      "name": "user",
      "description": "Authentication and More",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://orangetech.io"
      }
    },
    {
      "name": "collection",
      "description": "creation and app management"
    },
    {
      "name": "channel",
      "description": "channel creation and deletion"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/collection": {
      "post": {
        "tags": [
          "collection"
        ],
        "summary": "Creates collection",
        "description": "Creates a collection belonging to logged in user",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiUnauthorizezdResponse"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/collections": {
      "post": {
        "tags": [
          "collection"
        ],
        "summary": "Duplicate create channel",
        "description": "Duplicate that may be removed after checking tests",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiUnauthorizezdResponse"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/collections/:user_id": {
      "get": {
        "tags": [
          "collection"
        ],
        "summary": "Return all user's collections",
        "description": "Returns all collections belonging to user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          },
          "400": {
            "description": "Invalid Order"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiUnauthorizezdResponse"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/collection/:collection_id": {
      "get": {
        "tags": [
          "collection"
        ],
        "summary": "Return collection object",
        "description": "Returns collection with associated channels",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          },
          "400": {
            "description": "Invalid Order"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiUnauthorizezdResponse"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "tags": [
          "collection"
        ],
        "summary": "Update collection",
        "description": "Updates collection. Collection must belong to logged in user.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          },
          "400": {
            "description": "Invalid Order"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiUnauthorizezdResponse"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "collection"
        ],
        "summary": "Delete collection",
        "description": "Delete collection and all associated channels",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          },
          "400": {
            "description": "Invalid Order"
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiUnauthorizezdResponse"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/users": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "Creates user that can now be used for authentication",
        "operationId": "createUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Creates user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CreateUserResponse"
            }
          },
          "422": {
            "description": "Invalid operation",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Return user",
        "description": "This can only be done by the logged in user.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReturnUserResponse"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiUnauthorizezdResponse"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update user",
        "description": "This can only be done by the logged in user.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Creates user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserBody"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful request",
            "schema": {
              "$ref": "#/definitions/ApiSuccessResponse"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiUnauthorizezdResponse"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/ApiSuccessResponse"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiUnauthorizezdResponse"
            }
          },
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "User Login",
        "description": "Returns Bearer Token for JWT authentication",
        "operationId": "createUsersWithArrayInput",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of user object",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CreateUser"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/LoginUserResponse"
            }
          },
          "422": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/channel/:collection_id": {
      "post": {
        "tags": [
          "channel"
        ],
        "summary": "Create channel",
        "description": "Creates a channel belonging to a collection. Collection must belong to logged in user.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Creates user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CreateUserResponse"
            }
          },
          "422": {
            "description": "Invalid operation",
            "schema": {
              "$ref": "#/definitions/ApiErrorResponse"
            }
          }
        }
      }
    },
    "/channel/:channel_id": {
      "delete": {
        "tags": [
          "channel"
        ],
        "summary": "Delete channel",
        "description": "Delete a channel. This can only be done by the logged in user who owns the channel's collection.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/ApiSuccessResponse"
            }
          },
          "401": {
            "description": "unauthorized",
            "schema": {
              "$ref": "#/definitions/ApiUnauthorizezdResponse"
            }
          },
          "default": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "bearer_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://api.your-url.io/v1/user/login",
      "flow": "implicit"
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "first": {
          "type": "string"
        },
        "last": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "example": "unique email address"
        },
        "phone": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Collection": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "Channel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "ytId": {
          "type": "string"
        }
      }
    },
    "UserCollection": {
      "type": "object",
      "properties": {
        "order": {
          "type": "integer"
        }
      }
    },
    "CreateUser": {
      "type": "object",
      "properties": {
        "unique_key | email | phone": {
          "type": "string",
          "example": "8885678345"
        },
        "password": {
          "type": "string",
          "example": "secure-password"
        }
      }
    },
    "CreateUserResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "message": {
          "type": "string",
          "example": "Successfully created new user."
        },
        "token": {
          "type": "string",
          "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ...",
          "description": "Authentication token"
        }
      }
    },
    "LoginUserResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "token": {
          "type": "string",
          "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ...",
          "description": "Authentication token"
        }
      }
    },
    "ReturnUserResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "user": {
          "type": "object",
          "properties": {
            "first": {
              "type": "string",
              "example": "John"
            },
            "last": {
              "type": "string",
              "example": "doe"
            },
            "email": {
              "type": "string",
              "example": "john.doe@gmail.com"
            },
            "phone": {
              "type": "string",
              "example": "8889401234"
            },
            "apps": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "12chd73nsjuf"
                  },
                  "url": {
                    "type": "string",
                    "example": "www.orangetech.io"
                  }
                }
              }
            }
          }
        }
      }
    },
    "UpdateUserBody": {
      "type": "object",
      "properties": {
        "first": {
          "type": "string",
          "example": "John"
        },
        "last": {
          "type": "string",
          "example": "doe"
        },
        "email": {
          "type": "string",
          "example": "john.doe@gmail.com"
        },
        "phone": {
          "type": "string",
          "example": "8889401234"
        }
      }
    },
    "ApiErrorResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": false
        },
        "error": {
          "type": "string"
        }
      }
    },
    "ApiSuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "message": {
          "type": "string"
        }
      }
    },
    "ApiUnauthorizezdResponse": {
      "type": "string",
      "example": "Unauthorized"
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Orange Tech",
    "url": "http://orangetech.io"
  }
}